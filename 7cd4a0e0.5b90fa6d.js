(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),l=n(7),r=(n(0),n(90)),b={id:"commands",title:"Commands",sidebar_label:"Commands",slug:"/commands"},i={unversionedId:"commands",id:"commands",isDocsHomePage:!1,title:"Commands",description:"List of all API commands for Packer:",source:"@site/docs\\commands.md",slug:"/commands",permalink:"/shopify-packer/docs/commands",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/commands.md",version:"current",sidebar_label:"Commands",sidebar:"someSidebar",previous:{title:"Quick start",permalink:"/shopify-packer/docs/quick-start"},next:{title:"HTTPS & SSL",permalink:"/shopify-packer/docs/ssl"}},c=[{value:"init",id:"init",children:[]},{value:"start",id:"start",children:[]},{value:"watch",id:"watch",children:[]},{value:"deploy",id:"deploy",children:[]},{value:"build",id:"build",children:[]},{value:"lint",id:"lint",children:[]},{value:"format",id:"format",children:[]},{value:"zip",id:"zip",children:[]},{value:"theme:list",id:"themelist",children:[]},{value:"theme:create",id:"themecreate",children:[]},{value:"theme:remove",id:"themeremove",children:[]},{value:"theme:download",id:"themedownload",children:[]},{value:"ssl:make",id:"sslmake",children:[]},{value:"help",id:"help",children:[]}],o={toc:c};function p(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"List of all API commands for Packer:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#init"},"init")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#start"},"start")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#watch"},"watch")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#deploy"},"deploy")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#build"},"build")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#lint"},"lint")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#format"},"format")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#zip"},"zip")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#themelist"},"theme:list")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#themecreate"},"theme:create")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#themeremove"},"theme:remove")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#themedownload"},"theme:download")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#ssl:make"},"ssl:make")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#help"},"help"))),Object(r.b)("h3",{id:"init"},"init"),Object(r.b)("p",null,"Creates a blank start theme in specified directory. By default, it will use ",Object(r.b)("inlineCode",{parentName:"p"},"hayes0724/packer-blank-theme"),"\nunless you specify the repo flag with the name of the themes github repo. It will pull the latest release and fail\nif the custom theme repo has no releases."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer init <dir> [--repo=hayes0724/packer-blank-theme]")),Object(r.b)("h3",{id:"start"},"start"),Object(r.b)("p",null,"Compiles your local theme files into a dist directory, uploads these files to your remote Shopify store and finally\nboots up a local Express server that will serve most of your CSS and JavaScript."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer start [--env=my-custom-env-name] [--skipPrompts] [--skipFirstDeploy] [--allowLive] [--replace]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--env")),Object(r.b)("td",{parentName:"tr",align:null},"Targets a custom environment. Setting --env=production would use the production settings in packer.config.json")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--skipPrompts")),Object(r.b)("td",{parentName:"tr",align:null},"Skips all prompts. This is especially useful when using Packer with continuous integration tools")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--skipFirstDeploy")),Object(r.b)("td",{parentName:"tr",align:null},"Skips the file upload sequence and simply boots up the local Express server")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--allowLive")),Object(r.b)("td",{parentName:"tr",align:null},"Allows command to run on published themes")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--replace")),Object(r.b)("td",{parentName:"tr",align:null},"By default deploy will only replace changed files in the theme, use this flag to update and remove all existing files")))),Object(r.b)("h3",{id:"watch"},"watch"),Object(r.b)("p",null,"Same as start command except it skips the first deployment"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer watch [--env=my-custom-env-name] [--skipPrompts] [--allowLive] [--replace]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--env")),Object(r.b)("td",{parentName:"tr",align:null},"Targets a custom environment. Setting --env=production would use the production settings in packer.config.json")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--skipPrompts")),Object(r.b)("td",{parentName:"tr",align:null},"Skips all prompts. This is especially useful when using Packer with continuous integration tools")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--allowLive")),Object(r.b)("td",{parentName:"tr",align:null},"Allows command to run on published themes")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--replace")),Object(r.b)("td",{parentName:"tr",align:null},"By default deploy will only replace changed files in the theme, use this flag to update and remove all existing files")))),Object(r.b)("h3",{id:"deploy"},"deploy"),Object(r.b)("p",null,"Uploads the dist folder to the Shopify store."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer deploy [--env=my-custom-env-name] [--skipPrompts] [--replace] [--allowLive]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--env")),Object(r.b)("td",{parentName:"tr",align:null},"Targets a custom environment. Setting --env=production would use the production settings in packer.config.json")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--skipPrompts")),Object(r.b)("td",{parentName:"tr",align:null},"Skips all prompts. This is especially useful when using Packer with continuous integration tools")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--replace")),Object(r.b)("td",{parentName:"tr",align:null},"By default deploy will only replace changed files in the theme, use this flag to update and remove all existing files")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--allowLive")),Object(r.b)("td",{parentName:"tr",align:null},"Allows command to run on published themes")))),Object(r.b)("h3",{id:"build"},"build"),Object(r.b)("p",null,"Builds a production-ready version of the theme by compiling the files into the dist folder."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer build [--analyze] [--stats]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--analyze")),Object(r.b)("td",{parentName:"tr",align:null},"Analyzes bundles")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--stats")),Object(r.b)("td",{parentName:"tr",align:null},"Create a stats.json file in the root directory")))),Object(r.b)("h3",{id:"lint"},"lint"),Object(r.b)("p",null,"Lints the themes styles and scripts"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer lint [--scripts] [--styles]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--scripts")),Object(r.b)("td",{parentName:"tr",align:null},"Runs linting only on script files")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--styles")),Object(r.b)("td",{parentName:"tr",align:null},"Runs linting only on style files")))),Object(r.b)("h3",{id:"format"},"format"),Object(r.b)("p",null,"Formats the theme code according to the rules declared in the .eslintrc and .stylelintrc files. By default, it uses\nESLint Fix to format JS files, Stylelint Fix to format CSS files and Prettier to format JSON files."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer format [--scripts] [--styles]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--scripts")),Object(r.b)("td",{parentName:"tr",align:null},"Runs formatting only on script files")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--styles")),Object(r.b)("td",{parentName:"tr",align:null},"Runs formatting only on style files")))),Object(r.b)("h3",{id:"zip"},"zip"),Object(r.b)("p",null,"Compiles the contents of the dist directory and creates a ZIP file in the root of the project."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer zip")),Object(r.b)("h3",{id:"themelist"},"theme:list"),Object(r.b)("p",null,"Lists all themes (shows name, themeID, etc...) on the site, requires app password and store url be set first. By default looks at the store for development env in packer.config.json"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer theme:list [--env]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--env")),Object(r.b)("td",{parentName:"tr",align:null},"Targets a custom environment. Setting --env=production would use the production settings in packer.env.json")))),Object(r.b)("h3",{id:"themecreate"},"theme:create"),Object(r.b)("p",null,"Creates a new empty theme on Shopify and updates packer.config.json for the selected env with the proper themeID"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer theme:create [--env] [--name]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--env")),Object(r.b)("td",{parentName:"tr",align:null},"Targets a custom environment. Setting --env=production would use the production settings in packer.env.json")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--name=my-theme-name")),Object(r.b)("td",{parentName:"tr",align:null},"Sets the theme name on Shopify, it's required")))),Object(r.b)("h3",{id:"themeremove"},"theme:remove"),Object(r.b)("p",null,"Removes the theme set in the selected env from Shopify"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer theme:remove [--env] [--id]"),"\n| Flag | Description |\n| --- | --- |\n| ",Object(r.b)("inlineCode",{parentName:"p"},"--env")," | Targets a custom environment (defaults to development). Setting --env=production would use the production settings in packer.config.json |\n| ",Object(r.b)("inlineCode",{parentName:"p"},"--id")," | Delete a theme by using its ID  |"),Object(r.b)("h3",{id:"themedownload"},"theme:download"),Object(r.b)("p",null,"Downloads the theme set in the selected env from Shopify"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer theme:download [--env]")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Flag"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"--env")),Object(r.b)("td",{parentName:"tr",align:null},"Targets a custom environment. Setting --env=production would use the production settings in packer.config.json")))),Object(r.b)("h3",{id:"sslmake"},"ssl:make"),Object(r.b)("p",null,"Create a self-signed ssl cert for local development"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"packer ssl:make [--name]"),"\n| Flag | Description |\n| --- | --- |\n| ",Object(r.b)("inlineCode",{parentName:"p"},"--name")," | Name for SSL cert, defaults to localhost |"),Object(r.b)("h3",{id:"help"},"help"),Object(r.b)("p",null,"Display all commands and flags\n",Object(r.b)("inlineCode",{parentName:"p"},"packer help")))}p.isMDXComponent=!0},90:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var a=n(0),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=l.a.createContext({}),p=function(e){var t=l.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return l.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},s=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,b=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),m=p(n),s=a,u=m["".concat(b,".").concat(s)]||m[s]||d[s]||r;return n?l.a.createElement(u,i(i({ref:t},o),{},{components:n})):l.a.createElement(u,i({ref:t},o))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,b=new Array(r);b[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,b[1]=i;for(var o=2;o<r;o++)b[o]=n[o];return l.a.createElement.apply(null,b)}return l.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);